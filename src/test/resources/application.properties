# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = activity-service
spring.application.version = 0.9.1
spring.application.description = activity management spring boot service
spring.application.title = Restful API, GraphQL API

# enable spring boot actuator endpoints
management.endpoints.web.exposure.include = *

# spring boot profiles
spring.profiles.active = dev

# ----------------------------------------
# APPLICATION SERVER PROPERTIES
# ----------------------------------------
server.port = 8081
server.servlet.context-path = /
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12

# Whether response compression is enabled.
server.compression.enabled = false

# List of userEntity-agents to exclude from compression.
#server.compression.excluded-userEntity-agents=

# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048
server.servlet.encoding.force = true
server.servlet.encoding.charset = UTF-8
# ----------------------------------------
# Database Migration
# ----------------------------------------
spring.flyway.enabled = false

# ----------------------------------------
# MySQL DataSource
# ----------------------------------------
spring.datasource.driverClassName = org.h2.Driver
spring.datasource.url = jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username = sa
spring.datasource.password = sa

# spring JPA
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = none
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = false
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# spring email properties
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = jumkid.info@gmail.com
spring.mail.password = dummy_password
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true

# logging
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = TRACE
logging.level.com.jumkid.activity = TRACE
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr([JID:%X{journey_id}]){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# ----------------------------------------
# activity service properties
# ----------------------------------------
# enable spring security token filter
jwt.token.enable = false
jwt.token.client.id = activity-service
jwt.token.client.secret = dummy_secret
jwt.token.fetch.url = http://keycloak:8080/auth/realms/jumkid/protocol/openid-connect/token
jwt.token.introspect.url = http://keycloak:8080/auth/realms/jumkid/protocol/openid-connect/userinfo

# ----------------------------------------
# internal apis
# ----------------------------------------
# user profile api
api.user.profile = http://localhost/v1/user

# ----------------------------------------
# KAFKA PROPERTIES
# ----------------------------------------
spring.kafka.bootstrap-servers = localhost:10092
spring.kafka.topic.name.activity.notify = activity.notify
spring.kafka.consumer.group-id = 1
